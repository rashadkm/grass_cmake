Converted to C by Huidae Cho 4/2001

runs with positive (no NULLs) data only!

r.fill.dir accepts only rectangular maps with all positive elev.
It is the way how this and FORTRAN modules work. So until it is rewritten
as fully native GRASS module, we can not expect this to work for maps
containing NULLs. Its result may be wrong if NULL or negative elev is in
maps.


	NULL NULL 100  234  NULL		nl = 1, ns = 2
	NULL 123  324  321  NULL		nl = 2, ns = 3
	NULL NULL 111 NULL  NULL		nl = 3, ns = 1
	NULL NULL 111 NULL     0		nl = 4, ns = 1
	-1   321  111 NULL  NULL		nl = 5, ns = 2

This map is written as the following in the input file of fortran modules:

nl = 5, ns = 2

100
234
123
324
321
111
111
321
111

Then read it:

nl*ns = 10 data :-(

100	(1,1)
234	(1,2)
123	(2,1)
324	(2,2)
321	(3,1)
111	(3,2)
321	(4,1)
111	(4,2)
111	(5,1)
321	(5,2)
111	unread

now map is:

		100 234
		123 324
		321 111
		321 111
		111 321

however, we want:
		100 234
	    123 324 321
	        111
		111
	    321 111


It's full story.  :-)

I think that we should gather all modules into some functions and
use these in a main() with various grass lib functions.


Regards,
Huidae Cho


------------------------------------------------------
Updated to GRASS FP by Roger Miller 3/2001

"Roger S. Miller" <rgrmill@rt66.com>

From his mail:
Date: Tue, 13 Mar 2001 21:34:43 -0700                                           

One of the FORTRAN program (ppupdate.f) contains some logic that I think is
aimed at determining whether a depression is real or artificial.  It doesn't
fill holes that it determines to be real.  Possibly the NULL holes met the
requirements for a feature that the program would not fill.

I ran my test first with a raster map without null areas.  It worked on
cell, fcell and dcell maps, all of which gave approximately the same result. 
This raster map contains a number of shallow natural depressions (playas) --
features that ideally r.fill.dir would not fill in.  Unfortunately it did
fill them in.  That wasn't entirely a loss, though, because I found that I
could subtract the original map from the new, filled map and the difference
gave me a map of the depth of the depressions.  An interesting result.
                                                                                
I then filled a square area of the map with nulls, and ran it back through
r.fill.dir.  The FORTRAN programs generated errors (this is the expected
result) and the result was meaningless.  Then I replaced the null area with
zeros and reran r.fill.dir.  It ran without errors.  The big hole was not
filled but the playas were filled.  r.fill.dir also found and filled some
small holes along some drainage channels, thus integrating the watershed. 
This latter case is what r.fill.dir is supposed to do, so I guess we can say
that it works.
                                                                                
One thing I've found is that C (at least GNU C) does not correctly read
FORTRAN double precision numbers from formatted text.  FORTRAN prints double
precision numbers with a "D" indicating the exponent, as in 1.77785D-23. 
When a C program tries to read a double it looks for an "E" or "e" to
indicate the exponent.  So the FORTRAN double precision values are
misinterpreted by C programs.  This was a problem for r.fill.dir.  I had to
add a little FORTRAN subroutine that converted all the "D"s in the printed
double precision values to "E"s before the main program could reread the
results from the last of the FORTRAN programs.
                                                                                
This isn't just a problem with r.fill.dir.  r.in.dem died with a
segmentation fault when I tried to import a new dem.  Looking closer at the
program and at the USGS DEM standard I found that large parts of the header
are actually supposed to be FORTRAN double precision values.  I'm surprised
that r.in.dem works for anyone.  I guess once r.fill.dir is converted to C I
can turn to writing new input functions for r.in.dem.

Roger
